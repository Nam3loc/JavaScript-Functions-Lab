// Homework due Friday
/*
=================================
1.) (completed above) Define a function, as a function declaration, maxOfTwoNumbersthat takes two numbers as arguments and returns the largest of them. If they are the same, return that number. Use the if-else construct or a ternary expression - the Math.max method is not allowed.

2.) Define a function, as a function expression, maxOfThreethat takes three numbers as arguments and returns the largest of them. Again, the Math.max method is not allowed.

3.) Define a function, as a function declaration, isCharAVowelthat takes a character as an argument and returns true if it is a vowel, false otherwise.

4.) Define a function, as a function expression, sumArraythat takes an array of numbers and returns the sum of those numbers. For example, sumArray([2, 4, 5]);would return 11.

5.) Define a function, as a function declaration, multiplyArraythat takes an array of numbers and returns the product of those numbers. For example, multiplyArray([2, 4, 5]);would return 40.

6.) Define a function, as a function expression, numArgsthat returns the number of arguments passed to the function when called.

7.) Define a function, as a function declaration, reverseStringthat takes a string, reverses the characters, and returns it. For example, reverseString('rockstar');would return the string "ratskcor".

8.) Define a function, as a function expression, longestStringInArraythat takes an array of strings as an argument and returns the length of the longest string.

9.) Define a function, as a function declaration, stringsLongerThanthat takes an array of strings and a number as arguments, and returns an array of the strings that are longer than the number passed in. For example, stringsLongerThan(['say', 'hello', 'in', 'the', 'morning'], 3);would return ["hello", "morning"].
=================================
*/

// 1. Define a function, as a function declaration, maxOfTwoNumbersthat takes two numbers as arguments and returns the largest of them. If they are the same, return that number. Use the if-else construct or a ternary expression - the Math.max method is not allowed.
function maxOfTwoNumbers(x, y) {
  if (x >= y) {
    return x;
  } else {
    return y;
  }

  // or more "elegantly" using the fantastic ternary expression!
  // return  x >= y ? x : y;
}

// console.log(maxOfTwoNumbers(3, 9));

// 2. Define a function, as a function expression, maxOfThreethat takes three numbers as arguments and returns the largest of them. Again, the Math.max method is not allowed.

const maxOfThree = (arg1, arg2, arg3) => {
    if(arg1 > arg2 && arg1 > arg3){
        // console.log(`${arg1} is the biggest`)
        return "The first argument is the biggest"
    } else if(arg2 > arg1 && arg2 > arg3){
        // console.log(`${arg2} is the biggest`)
        return "The second argument is the biggest"
    } else{
        // console.log(`${arg3} is the biggest`)
        return "The third argument is the biggest"
    }
}

// console.log(maxOfThree(1, 3, 2));

//3.) Define a function, as a function declaration, isCharAVowelthat takes a character as an argument and returns true if it is a vowel, false otherwise.

isCharAVowel = (character) => {
  character = character.toLowerCase();
  if(character === "a" || character === "e" || character === "i" || character === "o" || character === "u"){
    return true;
  } else{
    return false;
  }
}

// console.log(isCharAVowel("b"));

//4.) Define a function, as a function expression, sumArraythat takes an array of numbers and returns the sum of those numbers. For example, sumArray([2, 4, 5]);would return 11.

let sum = 0;

const sumArray = (args) => {
  args.forEach((num) => {
    sum += num
  })
  return sum;
}

// console.log(sumArray([4, 1, 2]));

//5.) Define a function, as a function declaration, multiplyArraythat takes an array of numbers and returns the product of those numbers. For example, multiplyArray([2, 4, 5]);would return 40.

let product = 1;

multiplyArray = (args) => {
  args.forEach((num) => {
    product *= num
  })
  return product;
}

// console.log(multiplyArray([12, 21, 3]));

//6.) Define a function, as a function expression, numArgsthat returns the number of arguments passed to the function when called.

const numArgs = (...args) => {
  // console.log(args.length);
}

numArgs(1, 2, 3, 4, 5, 6);

//7.) Define a function, as a function declaration, reverseStringthat takes a string, reverses the characters, and returns it. For example, reverseString('rockstar');would return the string "ratskcor".

let emptyStr = " ";

reverseString = (str) => {
  for(let i = str.length - 1; i >= 0; i--){
    newStr += str[i];
  }
  return emptyStr;
}

// console.log(reverseString("coleman"));

//8.) Define a function, as a function expression, longestStringInArraythat takes an array of strings as an argument and returns the length of the longest string.

const longestStringInArray = (strArray) => {
  let longest = 0;
  for(let i = 0; i < strArray.length; i++){
    // console.log(strArray[i]);
    if(strArray[i].length > longest){
      longest = strArray[i].length;
    }
  }

  return longest;
}

let result = longestStringInArray(["hi", "bye", "hello"]);
// console.log(result);

//9.) Define a function, as a function declaration, stringsLongerThanthat takes an array of strings and a number as arguments, and returns an array of the strings that are longer than the number passed in. For example, stringsLongerThan(['say', 'hello', 'in', 'the', 'morning'], 3);would return ["hello", "morning"].

stringsLongerThan = (strArray, num) => {
  const emptyArray = []
  for(let i = 0; i < strArray.length; i++){
    // console.log(strArray[1]);
    if(strArray[i].length > num){
      emptyArray.push(strArray[i]);
    }
  }
  return emptyArray;
}

let completed = stringsLongerThan(["say", "hello", "in"], 2)
console.log(completed);